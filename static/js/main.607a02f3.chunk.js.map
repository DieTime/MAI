{"version":3,"sources":["reducers/index.js","reducers/group.js","reducers/id.js","reducers/currentWeek.js","config.js","data/faculties.js","data/courses.js","data/type.js","screens/SelectGroup.js","screens/TimeTable.js","App.js","sw.js","index.js"],"names":["combineReducers","group","state","action","type","payload","id","currentWeek","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","faculties","faculty","schedule","courses","OSNAME","platform","MODAL_PAGE_GROUPS","SelectGroup","props","openPopout","setState","popout","actions","title","autoclose","onClose","modalBack","setActiveModal","modalHistory","length","activeModal","indexOf","splice","push","getGroupsList","groups","fetch","curse","then","response","text","html","list","DOMParser","parseFromString","getElementsByClassName","item","children","innerText","groupList","getElementsByTagName","showMessage","modal","this","header","left","ANDROID","onClick","right","IOS","settlingHeight","map","elem","name","key","firebase","database","ref","child","store","set","chooseGroup","activePanel","style","background","marginTop","placeholder","isShown","color","size","level","Component","reduxConnect","dispatch","TimeTable","getTimeTable","dataSet","week","index","cells","oneDay","day","data","childNodes","subjects","dataObj","subject","subjectObj","time","teacher","location","nodeValue","dayObj","dateReformat","date","finalDate","arr","split","first","second","substr","weeksList","weeks","htmlDoc","unshift","position","top","bottom","margin","status","aside","marginLeft","paddingTop","paddingBottom","padding","height","paddingRight","paddingLeft","marginBottom","alignItems","justifyContent","display","fontSize","fontWeight","chooseWeek","App","loading","connect","sendPromise","chooseId","initializeApp","once","snapshot","val","currentGroup","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","isLocalhost","Boolean","window","hostname","match","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","send","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.607a02f3.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport group from './group'\r\nimport currentWeek from './currentWeek'\r\nimport id from './id'\r\n\r\nexport default combineReducers({\r\n    group,\r\n    id,\r\n    currentWeek,\r\n})","export default function group(state = \"\", action) {\r\n    if (action.type === 'selectGroup') {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","export default function id(state = null, action) {\r\n    if (action.type === 'selectId') {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","export default function currentWeek(state = null, action) {\r\n    if (action.type === 'chooseWeek') {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCn1YaKAi3BliUwsWV3kyRdU78t-X1FPDg\",\r\n    authDomain: \"mai-mini-app.firebaseapp.com\",\r\n    databaseURL: \"https://mai-mini-app.firebaseio.com\",\r\n    projectId: \"mai-mini-app\",\r\n    storageBucket: \"mai-mini-app.appspot.com\",\r\n    messagingSenderId: \"685442625210\",\r\n    appId: \"1:685442625210:web:704c090908c1f405725c83\"\r\n};\r\n","export const faculties = [\r\n    {\r\n        faculty: 'Факультет №1',\r\n        schedule:'150'\r\n    },\r\n    {\r\n        faculty: 'Институт №2',\r\n        schedule:'153'\r\n    },\r\n    {\r\n        faculty: 'Институт №3',\r\n        schedule:'157'\r\n    },\r\n    {\r\n        faculty: 'Институт №4',\r\n        schedule:'149'\r\n    },\r\n    {\r\n        faculty: 'ИНЖЭКИН',\r\n        schedule:'155'\r\n    },\r\n    {\r\n        faculty: 'Институт №6',\r\n        schedule:'160'\r\n    },\r\n    {\r\n        faculty: 'Факультет №7',\r\n        schedule:'154'\r\n    },\r\n    {\r\n        faculty: 'Факультет №8',\r\n        schedule:'151'\r\n    },\r\n    {\r\n        faculty: 'Институт №9',\r\n        schedule:'152'\r\n    },\r\n    {\r\n        faculty: 'Институт №10',\r\n        schedule:'146'\r\n    },\r\n    {\r\n        faculty: 'Институт №11',\r\n        schedule:'165'\r\n    },\r\n    {\r\n        faculty: 'Институт №12',\r\n        schedule:'164'\r\n    }\r\n];","export const courses = [1, 2, 3, 4, 5, 6];","export const type = ['Аспирантура','Бакалавриат', 'Магистратура', 'Специалитет'];","import React, {Component} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {reduxConnect} from \"react-redux\";\r\nimport {faculties} from '../data/faculties'\r\nimport {courses} from '../data/courses'\r\nimport {type} from '../data/type'\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Button,\r\n    Tooltip,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    ModalPage,\r\n    ModalRoot,\r\n    HeaderButton,\r\n    ModalPageHeader,\r\n    platform,\r\n    IOS,\r\n    ANDROID,\r\n    Radio,\r\n    FormLayoutGroup,\r\n    Alert,\r\n    ScreenSpinner\r\n} from '@vkontakte/vkui'\r\n\r\nconst OSNAME = platform();\r\nconst MODAL_PAGE_FACULTY = 'faculty';\r\nconst MODAL_PAGE_CURSE = 'curse';\r\nconst MODAL_PAGE_TYPE = 'type';\r\nconst MODAL_PAGE_GROUPS = 'groups';\r\n\r\nclass SelectGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            popout: null,\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            faculty: null,\r\n            curse: null,\r\n            type: null,\r\n            schedule: null,\r\n            groups: [],\r\n            showMessage: false,\r\n        }\r\n    }\r\n\r\n    openPopout = () => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Ок',\r\n                        autoclose: true,\r\n                    }]}\r\n                    onClose={() => {\r\n                        this.setState({popout: null})\r\n                    }\r\n                    }\r\n                >\r\n                    <h2>Групп по данному запросу не найдено</h2>\r\n                    <p>Пожалуйста проверьте корректность введенных данных</p>\r\n                </Alert>\r\n        });\r\n    };\r\n\r\n    modalBack = () => {\r\n        this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n    };\r\n\r\n    setActiveModal = (activeModal) => {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    getGroupsList = () => {\r\n        this.setState({groups: []});\r\n        this.setState({popout: <ScreenSpinner/>});\r\n        fetch('https://cors-anywhere.herokuapp.com/https://mai.ru/education/schedule/?department=' + this.state.schedule + '&course=' + this.state.curse)\r\n            .then((response) => response.text())\r\n            .then((html) => {\r\n                let parser = new DOMParser();\r\n                let htmlDoc = parser.parseFromString(html, 'text/html');\r\n                let list = htmlDoc.getElementsByClassName('sc-groups');\r\n                for (let item of list) {\r\n                    let type = item.children[0].innerText;\r\n                    if (type === this.state.type) {\r\n                        let groupList = item.getElementsByTagName('a');\r\n                        let groups = [];\r\n                        for (let group of groupList) {\r\n                            groups.push(group.innerText)\r\n                        }\r\n                        this.setState({groups: groups})\r\n                    }\r\n                }\r\n                this.setState({popout: null});\r\n                if (this.state.groups.length !== 0) {\r\n                    this.setActiveModal(MODAL_PAGE_GROUPS);\r\n                } else {\r\n                    this.openPopout();\r\n                }\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id={MODAL_PAGE_FACULTY}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={OSNAME === ANDROID &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Cancel/></HeaderButton>}\r\n                            right={OSNAME === IOS &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Dismiss/></HeaderButton>}\r\n                        >\r\n                            Выберите факультет\r\n                        </ModalPageHeader>\r\n                    }\r\n                    onClose={this.modalBack}\r\n                    settlingHeight={80}\r\n                >\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            {faculties.map((elem) => {\r\n                                return (\r\n                                    <Radio name=\"radio\" onClick={() => {\r\n                                        this.setState({faculty: elem.faculty});\r\n                                        this.setState({schedule: elem.schedule});\r\n                                        this.modalBack();\r\n                                    }} key={elem.schedule}>{elem.faculty}</Radio>\r\n                                );\r\n                            })}\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id={MODAL_PAGE_CURSE}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={OSNAME === ANDROID &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Cancel/></HeaderButton>}\r\n                            right={OSNAME === IOS &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Dismiss/></HeaderButton>}\r\n                        >\r\n                            Выберите курс\r\n                        </ModalPageHeader>\r\n                    }\r\n                    onClose={this.modalBack}\r\n                    settlingHeight={80}\r\n                >\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            {courses.map((name) => {\r\n                                return (\r\n                                    <Radio name=\"radio\" onClick={() => {\r\n                                        this.setState({curse: name});\r\n                                        this.modalBack();\r\n                                    }} key={name}>{name + ' курс'}</Radio>\r\n                                );\r\n                            })}\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id={MODAL_PAGE_TYPE}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={OSNAME === ANDROID &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Cancel/></HeaderButton>}\r\n                            right={OSNAME === IOS &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Dismiss/></HeaderButton>}\r\n                        >\r\n                            Выберите квалификацию\r\n                        </ModalPageHeader>\r\n                    }\r\n                    onClose={this.modalBack}\r\n                    settlingHeight={80}\r\n                >\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            {type.map((name) => {\r\n                                return (\r\n                                    <Radio name=\"radio\" onClick={() => {\r\n                                        this.setState({type: name});\r\n                                        this.modalBack();\r\n                                    }} key={name}>{name}</Radio>\r\n                                );\r\n                            })}\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id={MODAL_PAGE_GROUPS}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={OSNAME === ANDROID &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Cancel/></HeaderButton>}\r\n                            right={OSNAME === IOS &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Dismiss/></HeaderButton>}\r\n                        >\r\n                            Выберите факультет\r\n                        </ModalPageHeader>\r\n                    }\r\n                    onClose={this.modalBack}\r\n                    settlingHeight={80}\r\n                >\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            {this.state.groups.map((elem) => {\r\n                                return (\r\n                                    <Radio name=\"radio\" onClick={() => {\r\n                                        let database = firebase.database();\r\n                                        database.ref().child(this.props.store.id).set(elem).then(() => {\r\n                                            this.modalBack();\r\n                                            this.props.chooseGroup(elem);\r\n                                        });\r\n                                    }} key={elem}>{elem}</Radio>\r\n                                );\r\n                            })}\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        return (\r\n            <View id='main' popout={this.state.popout} activePanel='groupPanel' modal={modal}>\r\n                <Panel id='groupPanel'>\r\n                    <PanelHeader>Выберите группу</PanelHeader>\r\n                    <FormLayout style={{background: '#fff'}}>\r\n                        <SelectMimicry style={{marginTop: 10}}\r\n                                       placeholder={(this.state.faculty === null) ? 'Выберите факультет' : this.state.faculty}\r\n                                       onClick={() => {\r\n                                           this.setActiveModal(MODAL_PAGE_FACULTY)\r\n                                       }}/>\r\n                        <SelectMimicry placeholder={(this.state.curse === null) ? 'Выберите курс' : this.state.curse}\r\n                                       onClick={() => {\r\n                                           this.setActiveModal(MODAL_PAGE_CURSE)\r\n                                       }}/>\r\n                        <SelectMimicry\r\n                            placeholder={(this.state.type === null) ? 'Выберите квалификацию' : this.state.type}\r\n                            onClick={() => {\r\n                                this.setActiveModal(MODAL_PAGE_TYPE)\r\n                            }}/>\r\n                        <Tooltip text=\"Заполните все поля\"\r\n                                 isShown={this.state.showMessage}\r\n                                 onClose={() => this.setState({showMessage: false})}\r\n                                 title=\"Перед выбором группы\"\r\n                        >\r\n                            <Button style={{background: '#00a1f5', color: '#fff'}} size=\"xl\"\r\n                                    level=\"secondary\" onClick={() => {\r\n                                if (this.state.faculty !== null && this.state.curse !== null && this.state.type !== null) {\r\n                                    this.getGroupsList();\r\n                                } else {\r\n                                    this.setState({showMessage: true})\r\n                                }\r\n                            }\r\n                            }>\r\n                                Выбрать группу\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </FormLayout>\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxConnect(\r\n    state => ({\r\n        store: state,\r\n    }), dispatch => ({\r\n        chooseGroup: (group) => {\r\n            dispatch({type: 'selectGroup', payload: group});\r\n        },\r\n    })\r\n)(SelectGroup);\r\n\r\n","import React, {Component} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {reduxConnect} from \"react-redux\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24UserOutGoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nimport {\r\n    Panel,\r\n    PanelHeader,\r\n    View,\r\n    PanelHeaderContent,\r\n    Spinner,\r\n    Div,\r\n    platform,\r\n    IOS,\r\n    Header,\r\n    ANDROID, ModalRoot, ModalPage, ModalPageHeader, HeaderButton, FormLayout, FormLayoutGroup, Radio,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst OSNAME = platform();\r\n\r\nclass TimeTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            weeksList: null,\r\n            activeModal: null,\r\n            dataSet: null,\r\n            currentWeek: {\r\n                text: 'Текущая неделя',\r\n                index: 0\r\n            },\r\n            weeks: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://mai.ru/education/schedule/detail.php?group=' + this.props.store.group)\r\n            .then((response) => response.text())\r\n            .then((html)=>{\r\n                let parser = new DOMParser();\r\n                let htmlDoc = parser.parseFromString(html, 'text/html');\r\n                let cells = htmlDoc.getElementsByClassName('table');\r\n                let list = cells[0].children[0].children;\r\n                let weeksList = [];\r\n                for (let item of list) {\r\n                    weeksList.push(item.childNodes[1].innerText);\r\n                }\r\n                weeksList.unshift('Текущая неделя');\r\n                this.setState({weeks: weeksList});\r\n\r\n                let dataSet = [];\r\n                cells = htmlDoc.getElementsByClassName('sc-table-day');\r\n                for (let item of cells) {\r\n                    let oneDay = item.children[0].children;\r\n                    let day = oneDay[0].children[0].innerText;\r\n                    let data = oneDay[0].childNodes[0].data;\r\n                    let subjects = oneDay[1].children[0].children;\r\n                    let dataObj = [];\r\n                    for (let subject of subjects )\r\n                    {\r\n                        let subjectObj = {\r\n                            time: subject.children[0].innerText,\r\n                            type: subject.children[2].innerText,\r\n                            title: subject.children[3].children[0].children[0].innerText,\r\n                            teacher: (subject.children[3].children[0].children.length < 2) ? '' :  subject.children[3].children[0].children[2].innerText,\r\n                            location: subject.children[4].childNodes[1].nodeValue,\r\n                        };\r\n                        dataObj.push(subjectObj);\r\n                    }\r\n                    let dayObj = {\r\n                        day: day,\r\n                        data: data,\r\n                        subjects: dataObj\r\n                    };\r\n                    dataSet.push(dayObj);\r\n                }\r\n                this.setState({dataSet: dataSet});\r\n        })\r\n    }\r\n\r\n    getTimeTable = () => {\r\n        this.setState({dataSet: null});\r\n        let week = (this.state.currentWeek.text === 'Текущая неделя') ? '' : '&week=' + this.state.currentWeek.index;\r\n        fetch('https://cors-anywhere.herokuapp.com/https://mai.ru/education/schedule/detail.php?group=' + this.props.store.group + week)\r\n            .then((response) => response.text())\r\n            .then((html)=>{\r\n                let parser = new DOMParser();\r\n                let htmlDoc = parser.parseFromString(html, 'text/html');\r\n                let cells = htmlDoc.getElementsByClassName('sc-table-day');\r\n                let dataSet = [];\r\n                for (let item of cells) {\r\n                    let oneDay = item.children[0].children;\r\n                    let day = oneDay[0].children[0].innerText;\r\n                    let data = oneDay[0].childNodes[0].data;\r\n                    let subjects = oneDay[1].children[0].children;\r\n                    let dataObj = [];\r\n                    for (let subject of subjects )\r\n                    {\r\n                        let subjectObj = {\r\n                            time: subject.children[0].innerText,\r\n                            type: subject.children[2].innerText,\r\n                            title: subject.children[3].children[0].children[0].innerText,\r\n                            teacher: (subject.children[3].children[0].children.length < 2) ? '' :  subject.children[3].children[0].children[2].innerText,\r\n                            location: subject.children[4].childNodes[1].nodeValue,\r\n                        };\r\n                        dataObj.push(subjectObj);\r\n                    }\r\n                    let dayObj = {\r\n                        day: day,\r\n                        data: data,\r\n                        subjects: dataObj\r\n                    };\r\n                    dataSet.push(dayObj);\r\n                }\r\n                this.setState({dataSet: dataSet});\r\n            })\r\n    };\r\n\r\n    modalBack = () => {\r\n        this.setActiveModal(null);\r\n    };\r\n\r\n    setActiveModal = (activeModal) => {\r\n        activeModal = activeModal || null;\r\n        this.setState({\r\n            activeModal,\r\n        });\r\n    };\r\n\r\n    dateReformat = (date) => {\r\n        let finalDate = '';\r\n        let arr = date.split(\" - \");\r\n        let first = arr[0].split(\".\");\r\n        let second = arr[1].split(\".\");\r\n        finalDate += first[0] + '.' + first[1] + '.' + first[2].substr(-2) + \" - \" + second[0] + '.' + second[1] + '.' + second[2].substr(-2);\r\n        return finalDate;\r\n    };\r\n\r\n    render() {\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"weeks\"\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={OSNAME === ANDROID &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Cancel/></HeaderButton>}\r\n                            right={OSNAME === IOS &&\r\n                            <HeaderButton onClick={this.modalBack}><Icon24Dismiss/></HeaderButton>}\r\n                        >\r\n                            Выберите неделю\r\n                        </ModalPageHeader>\r\n                    }\r\n                    onClose={this.modalBack}\r\n                    settlingHeight={80}\r\n                >\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            {this.state.weeks.map((text, index) => {\r\n                                return (\r\n                                    <Radio name=\"radio\" onClick={() => {\r\n                                        this.setState({currentWeek: {text, index}});\r\n                                        this.modalBack();\r\n                                        if (text !== this.state.currentWeek.text) {\r\n                                            this.getTimeTable();\r\n                                        }\r\n                                    }} key={text}>{\r\n                                        (index !== 0 )\r\n                                        ? this.dateReformat(text) + ' (Неделя ' + index + ')'\r\n                                        : text }\r\n                                    </Radio>\r\n                                );\r\n                            })}\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        if (this.state.weeksList !== null) {\r\n            return <Spinner size=\"large\"\r\n                            style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, margin: 'auto'}}/>\r\n        }\r\n        else if (this.state.dataSet === null){\r\n            return (\r\n                <View id='main' activePanel='main' modal={modal}>\r\n                    <Panel id='main'>\r\n                        <PanelHeader left={<HeaderButton onClick={() => this.props.chooseGroup(\"\")}\r\n                        ><Icon24UserOutGoing style={{color: '#323232'}}/></HeaderButton>}>\r\n                            <PanelHeaderContent\r\n                                status={this.state.currentWeek.text === 'Текущая неделя' ? 'Текущая неделя' : this.dateReformat(this.state.currentWeek.text)}\r\n                                aside={<Icon16Dropdown style={{marginLeft: 1}}/>}\r\n                                onClick={() => this.setActiveModal('weeks')}\r\n                            >\r\n                                {this.props.store.group}\r\n                            </PanelHeaderContent>\r\n                        </PanelHeader>\r\n                        <Spinner size=\"large\"\r\n                                 style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, margin: 'auto'}}/>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <View id='main' activePanel='main' modal={modal}>\r\n                    <Panel id='main'>\r\n                        <PanelHeader left={<HeaderButton onClick={() => this.props.chooseGroup(\"\")}\r\n                        ><Icon24UserOutGoing style={{color: '#323232'}}/></HeaderButton>}>\r\n                            <PanelHeaderContent\r\n                                status={this.state.currentWeek.text === 'Текущая неделя' ? 'Текущая неделя' : this.dateReformat(this.state.currentWeek.text)}\r\n                                aside={<Icon16Dropdown style={{marginLeft: 1}}/>}\r\n                                onClick={() => this.setActiveModal('weeks')}\r\n                            >\r\n                                {this.props.store.group}\r\n                            </PanelHeaderContent>\r\n                        </PanelHeader>\r\n                            {this.state.dataSet.map((item, index)=>{\r\n                                return (\r\n                                    <Div key={index} style={(index !== 0) ? {paddingTop: 0, paddingBottom: 14} : {paddingTop: 14, paddingBottom: 14}}>\r\n                                        <Div style={{padding: 0}}>\r\n                                            <Header level=\"secondary\" style={{background: '#00a1f5', color: '#fff', height: 'auto', paddingRight: 20, paddingLeft: 20}} aside={<h3 style={{margin: 0, color: '#fff'}}>{item.day}</h3>}>\r\n                                                <h3 style={{margin: 0, color: '#fff'}}>{item.data}</h3>\r\n                                            </Header>\r\n                                        </Div>\r\n                                        {item.subjects.map((subject, index) => {\r\n                                            return (\r\n                                                <Div key={index} style={(index === 0) ? {background: '#fff', paddingLeft: 20, paddingRight: 20, paddingTop: 20, paddingBottom: 0} : {background: '#fff', paddingLeft: 20, paddingRight: 20, paddingTop: 0, paddingBottom: 0}}>\r\n                                                    {(index !== 0) ? <div style={{marginBottom: 20, height: '1px', background: '#dcdcdc'}}/> : null}\r\n                                                    <Div style={{alignItems: 'center', justifyContent: 'space-between', display: 'flex', padding: 0}}>\r\n                                                        <Div style={{fontSize: 19, color: '#323232', fontWeight: 700, padding: 0}}>\r\n                                                            {subject.time}\r\n                                                        </Div>\r\n                                                        <p style={{fontSize: 15, color: '#323232', margin: 0, fontWeight: 500}}>\r\n                                                            {subject.type}\r\n                                                        </p>\r\n                                                    </Div>\r\n                                                    <Div style={{fontSize: 18, color: '#323232', fontWeight: 600, paddingLeft: 0, paddingRight: 0, paddingBottom: 0, paddingTop: 10}}>\r\n                                                        {subject.title}\r\n                                                    </Div>\r\n                                                    {(subject.teacher !== '') ?\r\n                                                        <Div style={{fontSize: 13, color: '#323232', paddingLeft: 0, paddingRight: 0, paddingBottom: 0, paddingTop: 10}}>\r\n                                                            {subject.teacher}\r\n                                                        </Div>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    <Div style={{fontSize: 14, color: '#323232', fontWeight: 600, paddingLeft: 0, paddingRight: 0, paddingBottom: 20, paddingTop: 10}}>\r\n                                                        {subject.location}\r\n                                                    </Div>\r\n                                                </Div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </Div>\r\n                                )\r\n                            })}\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default reduxConnect(\r\n    state => ({\r\n        store: state,\r\n    }), dispatch => ({\r\n        chooseWeek: (week) => {\r\n            dispatch({type: 'chooseWeek', payload: week});\r\n        },\r\n        chooseGroup: (group) => {\r\n            dispatch({type: 'selectGroup', payload: group});\r\n        },\r\n    })\r\n)(TimeTable);\r\n","import React, {Component} from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {reduxConnect} from \"react-redux\";\nimport connect from '@vkontakte/vk-connect';\nimport {firebaseConfig} from \"./config\";\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport SelectGroup from './screens/SelectGroup'\nimport TimeTable from './screens/TimeTable'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: null,\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        connect.sendPromise(\"VKWebAppGetUserInfo\")\n            .then(data => {\n                this.setState({id: data.id});\n                this.props.chooseId(data.id);\n                return data.id\n            })\n            .then((id) => {\n                firebase.initializeApp(firebaseConfig);\n                let database = firebase.database();\n                database.ref('/' + id).once('value')\n                    .then((snapshot) => {\n                        if (snapshot.val() !== null) {\n                            this.setState({currentGroup: snapshot.val()});\n                            this.props.chooseGroup(snapshot.val());\n                        }\n                    })\n                    .then(() => {\n                        this.setState({loading: false});\n                    });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return null\n        } else if (this.props.store.group === \"\") {\n            return <SelectGroup/>\n        } else {\n            return <TimeTable/>\n        }\n    }\n}\n\nexport default reduxConnect(\n    state => ({\n        store: state,\n    }),\n    dispatch => ({\n        chooseGroup: (group) => {\n            dispatch({type: 'selectGroup', payload: group});\n        },\n        chooseId: (id) => {\n            dispatch({type: 'selectId', payload: id});\n        },\n    })\n)(App);\n\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__() && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nlet schemeAttribute = document.createAttribute('scheme');\nschemeAttribute.value = 'bright_light';\ndocument.body.attributes.setNamedItem(schemeAttribute);\n\nconnect.send('VKWebAppInit');\nregisterServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}